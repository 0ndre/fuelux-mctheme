// Core
.btn {
  padding: 0 10px 1px;
  text-shadow: none;
  font-weight: bold;
  line-height: @baseLineHeight;
  color: #4E8ABE;
  .box-shadow(1px 1px 2px 0 rgba(0, 0, 0, 0.15));
  border: 1px solid #B5C6D2;

  // Hover state
  &:hover {
    color: #4E8ABE;
	background-color: transparent;
    #gradient > .vertical(#f2f9ff, #C6DDEE);
    *background-color: #f2f9ff;
	background-position: center top;
  }

  // Active state
  &.active,
  &:active {
    color: #4E8ABE;
    #gradient > .vertical(#D5E4EB, #DEEAF6);
    *background-color: #D5E4EB;
    .box-shadow(inset 0 0 3px rgba(0,61,99,.20));
  }

  // Disabled state
  &.disabled,
  &[disabled] {
    cursor: default;
    color: #4E8ABE;
    #gradient > .vertical(@white, #DAE5ED);
    *background-color: @white;
    .box-shadow(none);
    border: 1px solid #B5C6D2;
    .opacity(60);
  }

}
.btn-primary {
  padding: 1px 10px 2px;
  border-width: 0;
  color: @white;
  text-shadow: none;
  background-color: #7FB9EC;
  #gradient > .vertical(#7FB9EC, #4E8ABE);
  *background-color: #7FB9EC;
  .reset-filter();

  // Hover state
  &:hover {
    color: @white;
    background-color: #9ACCF7;
    #gradient > .vertical(#9ACCF7, #669ECF);
    *background-color: #9ACCF7;
    .reset-filter();
  }

  // Active state
  &.active,
  &:active {
    color: @white;
    background-color: #4E8ABE;
    #gradient > .vertical(#4E8ABE, #5793C7);
    *background-color: #4E8ABE;
    .box-shadow(inset 0 0 3px rgba(0,0,0,.30));
  }

  // Disabled state
  &.disabled,
  &[disabled] {
    cursor: default;
    color: @white;
    #gradient > .vertical(#7FB9EC, #4E8ABE);
    *background-color: #7FB9EC;
    .box-shadow(none);
    .opacity(50);
  }

}

// Warning appears are orange
.btn-warning {
  padding: 1px 10px 2px;
  border-width: 0;
  color: @white;
  text-shadow: none;
  background-color: @btnWarningBackground;
  #gradient > .vertical(@btnWarningBackground, @btnWarningBackgroundHighlight);
  *background-color: @btnWarningBackgroundHighlight;
  .reset-filter();

  // Hover state
  &:hover {
    color: @white;
    background-color: darken(@btnWarningBackground, 5%);
    #gradient > .vertical(darken(@btnWarningBackground, 5%), darken(@btnWarningBackground, 5%));
    *background-color: darken(@btnWarningBackground, 5%);
    .reset-filter();
  }
}
// Danger and error appear as red
.btn-danger {
  padding: 1px 10px 2px;
  border-width: 0;
  color: @white;
  text-shadow: none;
  background-color: @btnDangerBackground;
  #gradient > .vertical(@btnDangerBackground, @btnDangerBackgroundHighlight);
  *background-color: @btnDangerBackgroundHighlight;
  .reset-filter();

  // Hover state
  &:hover {
    color: @white;
    background-color: darken(@btnDangerBackground, 5%);
    #gradient > .vertical(darken(@btnDangerBackground, 5%), darken(@btnDangerBackgroundHighlight, 5%));
    *background-color: darken(@btnDangerBackgroundHighlight, 5%);
    .reset-filter();
  }
}
// Success appears as green
.btn-success {
  padding: 1px 10px 2px;
  border-width: 0;
  color: @white;
  text-shadow: none;
  background-color: @btnSuccessBackground;
  #gradient > .vertical(@btnSuccessBackground, @btnSuccessBackgroundHighlight);
  *background-color: @btnSuccessBackgroundHighlight;
  .reset-filter();

  // Hover state
  &:hover {
    color: @white;
    background-color: darken(@btnSuccessBackground, 5%);
    #gradient > .vertical(darken(@btnSuccessBackground, 5%), darken(@btnSuccessBackgroundHighlight, 5%));
    *background-color: darken(@btnSuccessBackgroundHighlight, 5%);
    .reset-filter();
  }
}
// Info appears as a neutral blue
.btn-info {
  padding: 1px 10px 2px;
  border-width: 0;
  color: @white;
  text-shadow: none;
  background-color: @btnInfoBackground;
  #gradient > .vertical(@btnInfoBackground, @btnInfoBackgroundHighlight);
  *background-color: @btnInfoBackgroundHighlight;
  .reset-filter();

  // Hover state
  &:hover {
    color: @white;
    background-color: darken(@btnInfoBackground, 5%);
    #gradient > .vertical(darken(@btnInfoBackground, 5%), darken(@btnInfoBackgroundHighlight, 5%));
    *background-color: darken(@btnInfoBackgroundHighlight, 5%);
    .reset-filter();
  }
}
// Inverse appears as dark gray
.btn-inverse {
  padding: 1px 10px 2px;
  border-width: 0;
  color: @white;
  text-shadow: none;
  background-color: @btnInverseBackground;
  #gradient > .vertical(@btnInverseBackground, @btnInverseBackgroundHighlight);
  *background-color: @btnInverseBackgroundHighlight;
  .reset-filter();

  // Hover state
  &:hover {
    color: @white;
    background-color: darken(@btnInverseBackground, 5%);
    #gradient > .vertical(darken(@btnInverseBackground, 5%), darken(@btnInverseBackgroundHighlight, 5%));
    *background-color: darken(@btnInverseBackgroundHighlight, 5%);
    .reset-filter();
  }
}

// Large
.btn-large {
  padding: 4px 10px;
  font-size: @baseFontSize + 1px;
}

// Small
.btn-small {
  padding: 0 8px;
  font-size: @baseFontSize - 1px;
  line-height: @baseLineHeight - 4px;
}

// Mini
.btn-mini {
  padding: 0 8px;
  font-size: @baseFontSize - 2px;
  line-height: @baseLineHeight - 5px;
}


// Link buttons
// --------------------------------------------------

// Make a button look and behave like a link
.btn-link,
.btn-link:active,
.btn-link[disabled] {
  background-color: transparent;
  background-image: none;
  .box-shadow(none);
}
.btn-link {
  border-color: transparent;
  cursor: pointer;
  color: @linkColor;
  .border-radius(0);
}
.btn-link:hover {
  color: @linkColorHover;
  text-decoration: underline;
  background: transparent none;
}
.btn-link[disabled]:hover {
  color: @grayDark;
  text-decoration: none;
}
